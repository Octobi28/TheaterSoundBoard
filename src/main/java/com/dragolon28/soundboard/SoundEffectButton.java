/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.dragolon28.soundboard;
import java.io.*;
import java.util.Random;
import java.awt.*;
/**
 *
 * @author zack
 */
public class SoundEffectButton extends javax.swing.JPanel {

    private final File file;

    /**
     * Creates new form SoundEffectButton
     */
    public SoundEffectButton(File file) {
        initComponents();
        this.file = file;
        soundName.setText(file.getName());
        startPosLabel.setText(startPosSlider.getValue()*0.25+"s");
        volumeLabel.setText(volumeSlider.getValue()+"%");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        playButton = new javax.swing.JButton();
        startPosLabel = new javax.swing.JLabel();
        playPos = new javax.swing.JProgressBar();
        volumeLabel = new javax.swing.JLabel();
        startPosSlider = new javax.swing.JSlider();
        volumeSlider = new javax.swing.JSlider();
        soundName = new javax.swing.JLabel();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setMaximumSize(new java.awt.Dimension(250, 211));
        setPreferredSize(new java.awt.Dimension(250, 211));
        setLayout(new java.awt.GridBagLayout());

        playButton.setText("Play");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(playButton, gridBagConstraints);

        startPosLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startPosLabel.setText("startpos");
        startPosLabel.setToolTipText("The start position offset of the sound effect.");
        startPosLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        startPosLabel.setMaximumSize(new java.awt.Dimension(64, 20));
        startPosLabel.setMinimumSize(new java.awt.Dimension(64, 20));
        startPosLabel.setPreferredSize(new java.awt.Dimension(64, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(startPosLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 5);
        add(playPos, gridBagConstraints);

        volumeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        volumeLabel.setText("volume");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(volumeLabel, gridBagConstraints);

        startPosSlider.setMajorTickSpacing(2);
        startPosSlider.setMaximum(8);
        startPosSlider.setMinorTickSpacing(1);
        startPosSlider.setPaintTicks(true);
        startPosSlider.setSnapToTicks(true);
        startPosSlider.setToolTipText("Start Position");
        startPosSlider.setValue(4);
        startPosSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                startPosSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(startPosSlider, gridBagConstraints);

        volumeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volumeSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        add(volumeSlider, gridBagConstraints);

        soundName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        soundName.setText("soundName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.insets = new java.awt.Insets(9, 5, 9, 5);
        add(soundName, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void startPosSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_startPosSliderStateChanged
        startPosLabel.setText(startPosSlider.getValue()*0.25+"s");
    }//GEN-LAST:event_startPosSliderStateChanged

    private void volumeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumeSliderStateChanged
        volumeLabel.setText(volumeSlider.getValue()+"%");
    }//GEN-LAST:event_volumeSliderStateChanged

    public int[] getValues(){
        return new int[]{startPosSlider.getValue(), volumeSlider.getValue()};
    }
    
    public String getPath(){
        return file.getAbsolutePath();
    }
    
    public void setStartPos(int pos){
        startPosSlider.setValue(pos);
    }
    
    public void setVolume(int volume){
        volumeSlider.setValue(volume);
    }
    
    @Override
    public String toString(){
        return file.getName();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton playButton;
    private javax.swing.JProgressBar playPos;
    private javax.swing.JLabel soundName;
    private javax.swing.JLabel startPosLabel;
    private javax.swing.JSlider startPosSlider;
    private javax.swing.JLabel volumeLabel;
    private javax.swing.JSlider volumeSlider;
    // End of variables declaration//GEN-END:variables

}
